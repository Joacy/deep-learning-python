# -*- coding: utf-8 -*-
"""predict-soccer-score.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ICihlo6Suwd0SmhOM5gaAWjiUJ22OvBJ
"""

# Import pandas 
import pandas as pd

# Import numpy
import numpy as np

dataset = pd.read_csv("https://raw.githubusercontent.com/Joacy/deep-learning-python/master/predicao-placares/dataset-brasileirao-2016.csv", sep=';')

# Import `train_test_split` from `sklearn.model_selection`
from sklearn.model_selection import train_test_split

# Specify the data 
X=dataset.iloc[:,0:23]

# Specify the target labels and flatten the array
y=dataset.iloc[:,23:25]

# # Split the data up in train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

# Import `StandardScaler` from `sklearn.preprocessing`
from sklearn.preprocessing import StandardScaler

# Define the scaler 
scaler = StandardScaler().fit(X_train)

# Scale the train set
X_train = scaler.transform(X_train)

# Scale the test set
X_test = scaler.transform(X_test)

# Import `Sequential` from `keras.models`
from keras.models import Sequential

# Import `Dense` from `keras.layers`
from keras.layers import Dense

# Initialize the constructor
model = Sequential()

# Add an input layer 
model.add(Dense(23, input_dim=23, activation='relu'))

# Add one hidden layer 
model.add(Dense(13, activation='relu'))

# Add an output layer 
model.add(Dense(2, activation='sigmoid'))

model.compile(loss='mean_squared_error',
              optimizer='adam',
              metrics=['accuracy'])
                   
model.fit(X_train, y_train,epochs=100, batch_size=10, verbose=1)

score = model.evaluate(X_test, y_test, verbose=1)

print(score)